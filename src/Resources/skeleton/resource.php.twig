<?php
namespace {{ namespace }}{{ resource_namespace ? '\\' ~ resource_namespace : '' }};

{% block use_statements %}
use JMS\Serializer\Annotation;
{% endblock use_statements %}

/**
{% block phpdoc_class_header %}
 * Generated resource DTO for '{{ resource }}'.
{% endblock phpdoc_class_header %}
 */
{% block class_definition %}
class {{ resource_class }}
{% endblock class_definition %}
{
{%- block class_body -%}
    {%- for name, property in properties -%}
    {%- if property.type == 'object' %}
    {%- set typeName = property['x-ref-id']|split('/')|last -%}
    {%- set fqTypeName = namespace ~ (resource_namespace ? '\\' ~ resource_namespace : '') ~ '\\' ~ typeName -%}

    /**
     * @var {{ typeName }}
     * @Annotation\Type("{{ fqTypeName }}")
     */
    private ${{ name|klcamelize }};
    {%- elseif property.type == 'string' and property.format is defined and property.format == 'date' %}

    /**
     * @var \DateTime
     * @Annotation\Type("DateTime<'Y-m-d'>")
     */
    private ${{ name|klcamelize }};
    {%- elseif property.type == 'number' %}

    /**
     * @var float
     * @Annotation\Type("double")
     */
    private ${{ name|klcamelize }};
    {%- elseif property.type == 'string' and property.format is defined and property.format == 'date-time' %}

    /**
     * @var \DateTime
     * @Annotation\Type("DateTime<'Y-m-d\TH:i:sP'>")
     */
    private ${{ name|klcamelize }};
    {%- elseif property.type == 'array' and property.items is defined and property.items.type == 'object' %}
    {% set typeName = property.items['x-ref-id']|split('/')|last %}
    {% set fqTypeName = namespace ~ (resource_namespace ? '\\' ~ resource_namespace : '') ~ '\\' ~ typeName %}

    /**
     * @var {{ typeName }}[]
     * @Annotation\Type("array<{{ fqTypeName }}>")
     */
    private ${{ name|klcamelize }};
    {%- else %}

    /**
     * @var {{ property.type }}
     * @Annotation\Type("{{ property.type }}")
     */
    private ${{ name|klcamelize }};
    {%- endif %}{{- "\n" -}}
    {% endfor %}
    {% for name, property in properties %}
    {%- if property.type == 'object' %}
    {%- set typeName = property['x-ref-id']|split('/')|last %}

    /**
     * @param {{ typeName }}
     *
     * @return $this
     */
    {%- elseif property.type == 'string' and property.format is defined and property.format == 'date' %}

    /**
     * @param \DateTime
     *
     * @return $this
     */
    {%- elseif property.type == 'number' %}

    /**
     * @param float
     *
     * @return $this
     */
    {%- elseif property.type == 'string' and property.format is defined and property.format == 'date-time' %}

    /**
     * @param \DateTime
     *
     * @return $this
     */
    {%- else %}

    /**
     * @param {{ property.type }}
     *
     * @return $this
     */
    {%- endif %}

    public function set{{ name|klclassify }}(${{ name|klcamelize }})
    {
        $this->{{ name|klcamelize }} = ${{ name|klcamelize }};

        return $this;
    }{{- "\n" -}}
    {%- if property.type == 'array' and property.items is defined and property.items.type == 'object' %}
    {%- set typeName = property.items['x-ref-id']|split('/')|last %}

    /**
     * @param {{ typeName }} ${{ typeName|klcamelize }}
     */
    public function add{{ name|klsingularize|klclassify }}({{ typeName }} ${{ typeName|klcamelize }})
    {
        $this->{{ name }}[] = ${{ typeName|klcamelize }};
    }{{- "\n" -}}
    {%- endif %}
    {% endfor %}
    {% for name, property in properties %}
    {%- if property.type == 'object' %}
    {%- set typeName = property['x-ref-id']|split('/')|last %}

    /**
     * @return {{ typeName }}
     */
    {%- elseif property.type == 'string' and property.format is defined and property.format == 'date' %}

    /**
     * @return \DateTime
     */
    {%- elseif property.type == 'number' %}

    /**
     * @return float
     */
    {%- elseif property.type == 'string' and property.format is defined and property.format == 'date-time' %}

    /**
     * @return \DateTime
     */
    {%- else %}

    /**
     * @return {{ property.type }}
     */
    {%- endif %}

    public function get{{ name|klclassify }}()
    {
        return $this->{{ name|klcamelize }};
    }{{- "\n" -}}
    {%- if property.type == 'boolean' %}

    /**
     * @return boolean
     */
    public function is{{ name|klclassify }}()
    {
        return $this->{{ name }};
    }{{- "\n" -}}
    {%- endif %}
    {%- endfor -%}
{%- endblock class_body -%}{{- '}' -}}
{{- "\n" -}}